"use strict";
var __importDefault = (this && this.__importDefault) || function (mod) {
    return (mod && mod.__esModule) ? mod : { "default": mod };
};
Object.defineProperty(exports, "__esModule", { value: true });
exports.getCoverage = void 0;
const fs_1 = __importDefault(require("fs"));
const getCoverage = (dirPath) => {
    let coverage = [];
    try {
        const contents = fs_1.default.readFileSync(`${dirPath}/coverage/coverage-summary.json`, 'utf8');
        const coveredFiles = JSON.parse(contents);
        coverage = Object.keys(coveredFiles).map((file) => ({
            path: file.replace(dirPath, ''),
            coverage: coveredFiles[file],
        }));
    }
    catch (e) {
        // For now, we choose to do nothing. See https://github.com/sgb-io/codehawk-cli/issues/58
        // console.warn(`
        //         Coverage not found, please generate it using instanbul/nyc.
        //         We expect the json-summary format (coverage/coverage-summary.json).
        //         If you don't have any tests, you can still continue.
        //     `)
    }
    return coverage;
};
exports.getCoverage = getCoverage;
