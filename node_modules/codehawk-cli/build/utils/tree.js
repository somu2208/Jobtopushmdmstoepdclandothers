"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.getResultsAsList = exports.flattenEntireTree = void 0;
const flattenEntireTree = (items) => {
    let flattened = [];
    items.forEach((item) => {
        if (item.type === 'dir') {
            flattened = flattened.concat((0, exports.flattenEntireTree)(item.files));
        }
        else {
            flattened.push(item);
        }
    });
    return flattened;
};
exports.flattenEntireTree = flattenEntireTree;
const getResultsAsList = (analyzedEntities, limit) => {
    const flatFileResults = (0, exports.flattenEntireTree)(analyzedEntities)
        .filter((entity) => {
        return entity.type === 'file' && !!entity.complexityReport;
    })
        // Sort by codehawk score, ascending (most complex files are first in the list)
        .sort((entityA, entityB) => {
        return (entityA.complexityReport.codehawkScore -
            entityB.complexityReport.codehawkScore);
    });
    return limit ? flatFileResults.slice(0, limit) : flatFileResults;
};
exports.getResultsAsList = getResultsAsList;
